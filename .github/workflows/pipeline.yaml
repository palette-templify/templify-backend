name: CI/CD for Spring Multi-Module (Templify)

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  MODULES: "gateway auth transform history write"

jobs:
#  detect-changes:
#    runs-on: ubuntu-latest
#    outputs:
#      changed_modules: ${{ steps.changed-modules.outputs.modules }}
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      - name: Detect Changed Modules
#        id: changed-modules
#        run: |
#          CHANGED_FILES=$(git diff --name-only origin/develop...HEAD)
#          MODULES=""
#          for MODULE in $MODULES; do
#            if echo "$CHANGED_FILES" | grep -q "^$MODULE/"; then
#              MODULES="$MODULES $MODULE"
#            fi
#          done
#          echo "modules=$MODULES" >> $GITHUB_ENV
#          echo "Changed Modules: $MODULES"

  build-and-push:
#    needs: detect-changes
#    if: ${{ needs.detect-changes.outputs.changed_modules != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        module: ${{ fromJSON(needs.detect-changes.outputs.changed_modules) }}
        module: ["gateway", "auth", "transform", "history", "write"]
    env:
      IMAGE_NAME: templify-${{ matrix.module }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build ${{ matrix.module }}
        run: |
          cd ${{ matrix.module }}
          gradle clean build

      - name: Generate Version Tag
        id: gen-version
        run: |
          export TZ=Asia/Seoul                
          echo "VERSION=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Dockerhub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          cd ${{ matrix.module }}
          docker build -t $DOCKER_USERNAME/${{ env.IMAGE_NAME }}:${{ env.VERSION }} -f Dockerfile .
          docker push $DOCKER_USERNAME/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  update-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Kubernetes manifest repository
        uses: actions/checkout@v3
        with:
          repository: palette-templify/templify-k8s-manifests
          token: ${{ secrets.MANIFEST_GITHUB_TOKEN }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update Kubernetes resources
        run: |
          for MODULE in ${{ needs.detect-changes.outputs.changed_modules }}; do
            cd $MODULE
            kustomize edit set image $DOCKER_USERNAME/templify-$MODULE:${{ env.VERSION }}
            cat kustomization.yaml
            cd ..

      - name: Commit & Push Updated Kustomization Files
        run: |
          git config --global user.email "sngjae972@github.com"
          git config --global user.name "김성재"
          git add .
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Update image tag to ${{ env.VERSION }} for changed modules"
            git push -u origin main
          fi